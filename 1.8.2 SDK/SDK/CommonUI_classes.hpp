#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonUI

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Slate_structs.hpp"
#include "CommonUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "BlueprintContext_classes.hpp"
#include "WidgetCarousel_structs.hpp"


namespace SDK
{

// Class CommonUI.CommonTextBlock
// 0x0050 (0x0298 - 0x0248)
class UCommonTextBlock : public UTextBlock
{
public:
	TSubclassOf<class UCommonTextStyle>           Style;                                             // 0x0248(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonTextScrollStyle>     ScrollStyle;                                       // 0x0250(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_258[0x40];                                     // 0x0258(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ResetScrollState();
	void SetProperties(TSubclassOf<class UCommonTextStyle> InStyle, TSubclassOf<class UCommonTextScrollStyle> InScrollStyle);
	void SetScrollStyle(TSubclassOf<class UCommonTextScrollStyle> InScrollStyle);
	void SetStyle(TSubclassOf<class UCommonTextStyle> InStyle);
	void SetWrapTextWidth(int32 InWrapTextAt);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonTextBlock")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonTextBlock")
	}
	static class UCommonTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonTextBlock>();
	}
};
DUMPER7_ASSERTS_UCommonTextBlock;

// Class CommonUI.CommonNumericTextBlock
// 0x0088 (0x0320 - 0x0298)
class UCommonNumericTextBlock : public UCommonTextBlock
{
public:
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnOutroEvent;                                      // 0x02A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnInterpolationEndedEvent;                         // 0x02B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         CurrentNumericValue;                               // 0x02C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPercentage;                                      // 0x02C4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCommonNumberFormattingOptions         FormattingSpecification;                           // 0x02C8(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                         EaseOutInterpolationExponent;                      // 0x02DC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterpolationUpdateInterval;                       // 0x02E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PostInterpolationShrinkDuration;                   // 0x02E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E8[0x38];                                     // 0x02E8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InterpolateToValue(const float TargetValue, float MaximumInterpolationDuration, float MinimumChangeRate, float OutroOffset);
	void SetCurrentValue(const float NewValue);

	float GetTargetValue() const;
	bool IsInterpolatingNumericValue() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonNumericTextBlock")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonNumericTextBlock")
	}
	static class UCommonNumericTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonNumericTextBlock>();
	}
};
DUMPER7_ASSERTS_UCommonNumericTextBlock;

// Class CommonUI.CommonUserWidget
// 0x0008 (0x0238 - 0x0230)
class UCommonUserWidget : public UUserWidget
{
public:
	bool                                          bConsumePointerInput;                              // 0x0230(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetConsumePointerInput(bool bInConsumePointerInput);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonUserWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonUserWidget")
	}
	static class UCommonUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonUserWidget>();
	}
};
DUMPER7_ASSERTS_UCommonUserWidget;

// Class CommonUI.CommonActionWidget
// 0x0228 (0x0340 - 0x0118)
class UCommonActionWidget final : public UWidget
{
public:
	UMulticastDelegateProperty_                   OnInputMethodChanged;                              // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    InputActionDataRow;                                // 0x0128(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ProgressMaterialBrush;                             // 0x0138(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FName                                   ProgressMaterialParam;                             // 0x01C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            IconRimBrush;                                      // 0x01D0(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               ProgressDynamicMaterial;                           // 0x0260(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_268[0xD8];                                     // 0x0268(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetInputAction(const struct FDataTableRowHandle& InputActionRow);

	class FText GetDisplayText() const;
	struct FSlateBrush GetIcon() const;
	bool IsHeldAction() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonActionWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonActionWidget")
	}
	static class UCommonActionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonActionWidget>();
	}
};
DUMPER7_ASSERTS_UCommonActionWidget;

// Class CommonUI.CommonTabListWidget
// 0x00C8 (0x0300 - 0x0238)
class UCommonTabListWidget : public UCommonUserWidget
{
public:
	UMulticastDelegateProperty_                   OnTabSelected;                                     // 0x0238(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnTabButtonCreated;                                // 0x0248(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnTabButtonRemoved;                                // 0x0258(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    NextTabInputActionData;                            // 0x0268(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                    PreviousTabInputActionData;                        // 0x0278(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bAutoListenForInput;                               // 0x0288(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonWidgetSwitcher*                  LinkedSwitcher;                                    // 0x0290(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FCommonRegisteredTabInfo> RegisteredTabsByID;                           // 0x0298(0x0050)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UCommonButtonGroup*                     TabButtonGroup;                                    // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F0[0x10];                                     // 0x02F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableTabWithReason(class FName TabNameID, const class FText& Reason);
	class UCommonButton* GetTabButtonByID(class FName TabNameID);
	void HandleNextTabInputAction(bool* bPassThrough);
	void HandlePostLinkedSwitcherChanged_BP();
	void HandlePreLinkedSwitcherChanged_BP();
	void HandlePreviousTabInputAction(bool* bPassThrough);
	void HandleTabButtonSelected(class UCommonButton* SelectedTabButton, int32 ButtonIndex);
	void HandleTabCreated(class FName TabNameID, class UCommonButton* TabButton);
	void HandleTabRemoved(class FName TabNameID, class UCommonButton* TabButton);
	bool RegisterTab(class FName TabNameID, TSubclassOf<class UCommonButton> ButtonWidgetType, class UWidget* ContentWidget);
	void RemoveAllTabs();
	bool RemoveTab(class FName TabNameID);
	bool SelectTabByID(class FName TabNameID, bool bSuppressClickFeedback);
	void SetLinkedSwitcher(class UCommonWidgetSwitcher* CommonSwitcher);
	void SetListeningForInput(bool bShouldListen);
	void SetTabEnabled(class FName TabNameID, bool bEnable);
	void SetTabVisibility(class FName TabNameID, ESlateVisibility NewVisibility);

	class FName GetActiveTab() const;
	class UCommonWidgetSwitcher* GetLinkedSwitcher() const;
	int32 GetTabCount() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonTabListWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonTabListWidget")
	}
	static class UCommonTabListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonTabListWidget>();
	}
};
DUMPER7_ASSERTS_UCommonTabListWidget;

// Class CommonUI.CommonActivatablePanel
// 0x01A8 (0x03E0 - 0x0238)
class UCommonActivatablePanel : public UCommonUserWidget
{
public:
	uint8                                         Pad_238[0x8];                                      // 0x0238(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnWidgetActivated;                                 // 0x0240(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnWidgetDeactivated;                               // 0x0250(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_260[0x100];                                    // 0x0260(0x0100)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bConsumeAllActions;                                // 0x0360(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bExposeActionsExternally;                          // 0x0361(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShouldBypassStack;                                // 0x0362(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_363[0x7D];                                     // 0x0363(0x007D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddInputActionHandler(class UDataTable* DataTable, class FName RowName, TDelegate<void(bool* bPassThrough)> CommitedEvent);
	void AddInputActionHandlerWithProgress(class UDataTable* DataTable, class FName RowName, TDelegate<void(bool* bPassThrough)> CommitedEvent, TDelegate<void(float HeldPercent)> ProgressEvent);
	void AddInputActionNoHandler(class UDataTable* DataTable, class FName RowName);
	void BeginIntro();
	void BeginOutro();
	void EndIntro();
	void EndOutro();
	void OnActivated();
	void OnBeginIntro();
	void OnBeginOutro();
	void OnDeactivated();
	void OnInputModeChanged(bool bUsingGamepad);
	void PopPanel();
	void RemoveAllInputActionHandlers();
	void RemoveInputActionHandler(const struct FDataTableRowHandle& InputActionRow);
	void SetActionHandlerState(class UDataTable* DataTable, class FName RowName, EInputActionState State);
	void SetActionHandlerStateFromHandle(const struct FDataTableRowHandle& InputActionRow, EInputActionState State);
	void SetActionHandlerStateFromHandleWithDisabledCommitEvent(const struct FDataTableRowHandle& InputActionRow, EInputActionState State, TDelegate<void(bool* bPassThrough)> DisabledCommitEvent);
	void SetActionHandlerStateWithDisabledCommitEvent(class UDataTable* DataTable, class FName RowName, EInputActionState State, TDelegate<void(bool* bPassThrough)> DisabledCommitEvent);
	void SetInputActionHandler(const struct FDataTableRowHandle& InputActionRow, TDelegate<void(bool* bPassThrough)> CommitedEvent);
	void SetInputActionHandlerWithProgress(const struct FDataTableRowHandle& InputActionRow, TDelegate<void(bool* bPassThrough)> CommitedEvent, TDelegate<void(float HeldPercent)> ProgressEvent);

	bool GetInputActions(TArray<struct FCommonInputActionHandlerData>* InputActionDataRows) const;
	bool HasInputActionHandler(const struct FDataTableRowHandle& InputActionRow) const;
	bool IsActivated() const;
	bool IsIntroed() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonActivatablePanel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonActivatablePanel")
	}
	static class UCommonActivatablePanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonActivatablePanel>();
	}
};
DUMPER7_ASSERTS_UCommonActivatablePanel;

// Class CommonUI.CommonButton
// 0x0668 (0x08A0 - 0x0238)
class UCommonButton : public UCommonUserWidget
{
public:
	UMulticastDelegateProperty_                   OnSelectedChanged;                                 // 0x0238(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnButtonClicked;                                   // 0x0248(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnButtonDoubleClicked;                             // 0x0258(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnButtonHovered;                                   // 0x0268(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnButtonUnhovered;                                 // 0x0278(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                         MinWidth;                                          // 0x0288(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinHeight;                                         // 0x028C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonButtonStyle>         Style;                                             // 0x0290(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bApplyAlphaOnDisable;                              // 0x0298(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateSound                            PressedSlateSoundOverride;                         // 0x02A0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSlateSound                            HoveredSlateSoundOverride;                         // 0x02B8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bSelectable;                                       // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShouldSelectUponReceivingFocus;                   // 0x02D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInteractableWhenSelected;                         // 0x02D2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bToggleable;                                       // 0x02D3(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDisplayInputActionWhenNotInteractable;            // 0x02D4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EButtonClickMethod                            ClickMethod;                                       // 0x02D5(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D6[0x2];                                      // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    TriggeringInputAction;                             // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	int32                                         InputPriority;                                     // 0x02E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHideInputActionWithKeyboard;                      // 0x02EC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2ED[0x43];                                     // 0x02ED(0x0043)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActionWidget*                    InputActionWidget;                                 // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               SingleMaterialStyleMID;                            // 0x0338(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FButtonStyle                           NormalStyle;                                       // 0x0340(0x02A8)(NativeAccessSpecifierPrivate)
	struct FButtonStyle                           SelectedStyle;                                     // 0x05E8(0x02A8)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_890[0x10];                                     // 0x0890(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearSelection();
	void DisableButton();
	void DisableButtonWithReason(const class FText& DisabledReason);
	void EnableButton();
	void HandleButtonClicked();
	void HandleButtonDoubleClicked();
	void HandleFocusReceived();
	void HandleTriggeringActionCommited(bool* bPassThrough);
	void NativeOnActionComplete();
	void NativeOnActionProgress(float HeldPercent);
	void OnActionComplete();
	void OnActionProgress(float HeldPercent);
	void OnClicked();
	void OnCurrentTextStyleChanged();
	void OnDeselected();
	void OnDisabled();
	void OnDoubleClicked();
	void OnEnabled();
	void OnHovered();
	void OnInputMethodChanged(bool bUsingGamepad);
	void OnSelected();
	void OnTriggeredInputActionChanged(const struct FDataTableRowHandle& NewTriggeredAction);
	void OnUnhovered();
	void SetInputActionProgressMaterial(const struct FSlateBrush& InProgressMaterialBrush, const class FName& InProgressMaterialParam);
	void SetIsInteractionEnabled(bool bInIsInteractionEnabled);
	void SetIsSelectable(bool bInIsSelectable);
	void SetIsSelected(bool InSelected, bool bGiveClickFeedback);
	void SetIsToggleable(bool bInIsToggleable);
	void SetMinDimensions(int32 InMinWidth, int32 InMinHeight);
	void SetSelectedInternal(bool bInSelected, bool bAllowSound, bool bBroadcast);
	void SetShouldSelectUponReceivingFocus(bool bInShouldSelectUponReceivingFocus);
	void SetStyle(TSubclassOf<class UCommonButtonStyle> InStyle);
	void SetTriggeredInputAction(const struct FDataTableRowHandle& InputActionRow, class UCommonActivatablePanel* OldPanel);

	void GetCurrentButtonPadding(struct FMargin* OutButtonPadding) const;
	void GetCurrentCustomPadding(struct FMargin* OutCustomPadding) const;
	class UCommonTextStyle* GetCurrentTextStyle() const;
	TSubclassOf<class UCommonTextStyle> GetCurrentTextStyleClass() const;
	bool GetInputAction(struct FDataTableRowHandle* InputActionRow) const;
	bool GetSelected() const;
	bool GetShouldSelectUponReceivingFocus() const;
	class UMaterialInstanceDynamic* GetSingleMaterialStyleMID() const;
	class UCommonButtonStyle* GetStyle() const;
	bool IsHovered() const;
	bool IsInteractionEnabled() const;
	bool IsPressed() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonButton")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonButton")
	}
	static class UCommonButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonButton>();
	}
};
DUMPER7_ASSERTS_UCommonButton;

// Class CommonUI.CommonTextScrollStyle
// 0x0018 (0x0040 - 0x0028)
class UCommonTextScrollStyle : public UObject
{
public:
	float                                         Speed;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StartDelay;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EndDelay;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeInDelay;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FadeOutDelay;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonTextScrollStyle")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonTextScrollStyle")
	}
	static class UCommonTextScrollStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonTextScrollStyle>();
	}
};
DUMPER7_ASSERTS_UCommonTextScrollStyle;

// Class CommonUI.CommonListView
// 0x0200 (0x0318 - 0x0118)
#pragma pack(push, 0x1)
class alignas(0x08) UCommonListView : public UWidget
{
public:
	UMulticastDelegateProperty_                   OnItemClicked;                                     // 0x0118(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnItemDoubleClicked;                               // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnItemHovered;                                     // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnItemSelected;                                    // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnItemWidgetCreated;                               // 0x0158(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnItemWidgetDestroyed;                             // 0x0168(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                         ItemHeight;                                        // 0x0178(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMargin                                DesiredItemPadding;                                // 0x017C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                ListItemClass;                                     // 0x0190(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESelectionMode                                SelectionMode;                                     // 0x0198(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EConsumeMouseWheel                            ConsumeMouseWheel;                                 // 0x0199(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bClearSelectionOnClick;                            // 0x019A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_19B[0x1];                                      // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumPreAllocatedEntries;                            // 0x019C(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bSimulateDoubleClickOnSelectedItemClick;           // 0x01A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A1[0x16F];                                    // 0x01A1(0x016F)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonListViewNullItem*                NullItem;                                          // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Clear();
	void ClearSelection();
	void DynamicHandleItemClickedCommonButton(class UCommonButton* Button);
	void DynamicHandleItemClickedUserWidget(class UUserWidget* Widget);
	void DynamicHandleItemDoubleClickedCommonButton(class UCommonButton* Button);
	void DynamicHandleItemHoveredCommonButton(class UCommonButton* Button);
	void DynamicHandleItemUnhoveredCommonButton(class UCommonButton* Button);
	void ScrollIntoView(class UObject* Item, const bool NavigateOnScrollIntoView);
	void SetDataProvider(const TArray<class UObject*>& InDataProvider);
	void SetDesiredItemPadding(const struct FMargin& DesiredPadding);
	void SetItemHeight(float NewHeight);
	void SetItemSelection(class UObject* Item, bool bSelected);
	bool SetSelectedIndex(int32 Index_0);
	bool SetSelectedItem(class UObject* Item, bool bWaitIfPendingRefresh);
	void SetSelectionMode(ESelectionMode SelectionMode_0);
	void SetSimulateDoubleClickOnSelectedItemClick(bool bInSimulateDoubleClick);

	void AddItem(class UObject* Item) const;
	int32 GetIndexForItem(class UObject* Item) const;
	class UObject* GetItemAt(int32 Index_0) const;
	int32 GetNumItems() const;
	int32 GetNumItemsSelected() const;
	class UObject* GetSelectedItem() const;
	bool GetSelectedItems(TArray<class UObject*>* Items) const;
	ESelectionMode GetSelectionModeBP() const;
	bool IsItemVisible(class UObject* Item) const;
	bool IsRefreshPending() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonListView")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonListView")
	}
	static class UCommonListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonListView>();
	}
};
#pragma pack(pop)
DUMPER7_ASSERTS_UCommonListView;

// Class CommonUI.CommonWidgetGroupBase
// 0x0000 (0x0028 - 0x0028)
class UCommonWidgetGroupBase : public UObject
{
public:
	void AddWidget(class UWidget* InWidget);
	void RemoveAll();
	void RemoveWidget(class UWidget* InWidget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonWidgetGroupBase")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonWidgetGroupBase")
	}
	static class UCommonWidgetGroupBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonWidgetGroupBase>();
	}
};
DUMPER7_ASSERTS_UCommonWidgetGroupBase;

// Class CommonUI.CommonTileView
// 0x0018 (0x0330 - 0x0318)
class UCommonTileView : public UCommonListView
{
public:
	EItemAlignment                                ItemAlignment;                                     // 0x0318(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ItemWidth;                                         // 0x031C(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_320[0x10];                                     // 0x0320(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetItemWidth(float NewWidth);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonTileView")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonTileView")
	}
	static class UCommonTileView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonTileView>();
	}
};
DUMPER7_ASSERTS_UCommonTileView;

// Class CommonUI.CommonButtonGroup
// 0x0070 (0x0098 - 0x0028)
class UCommonButtonGroup : public UCommonWidgetGroupBase
{
public:
	UMulticastDelegateProperty_                   OnSelectedButtonChanged;                           // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnHoveredButtonChanged;                            // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnButtonClicked;                                   // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnButtonDoubleClicked;                             // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnSelectionCleared;                                // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bSelectionRequired;                                // 0x0078(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_79[0x1F];                                      // 0x0079(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DeselectAll();
	void OnButtonHovered(class UCommonButton* BaseButton);
	void OnButtonUnhovered(class UCommonButton* BaseButton);
	void OnHandleButtonClicked(class UCommonButton* BaseButton);
	void OnHandleButtonDoubleClicked(class UCommonButton* BaseButton);
	void OnSelectionStateChanged(class UCommonButton* BaseButton, bool bIsSelected);
	void SelectButtonAtIndex(int32 ButtonIndex);
	void SelectNextButton(bool bAllowWrap);
	void SelectPreviousButton(bool bAllowWrap);
	void SetSelectionRequired(bool bRequireSelection);

	int32 FindButtonIndex(const class UCommonButton* ButtonToFind) const;
	class UCommonButton* GetButtonAtIndex(int32 Index_0) const;
	int32 GetSelectedButtonIndex() const;
	bool HasAnyButtons() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonButtonGroup")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonButtonGroup")
	}
	static class UCommonButtonGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonButtonGroup>();
	}
};
DUMPER7_ASSERTS_UCommonButtonGroup;

// Class CommonUI.AnalogSlider
// 0x0010 (0x0420 - 0x0410)
class UAnalogSlider final : public USlider
{
public:
	UMulticastDelegateProperty_                   OnAnalogCapture;                                   // 0x0410(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("AnalogSlider")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"AnalogSlider")
	}
	static class UAnalogSlider* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnalogSlider>();
	}
};
DUMPER7_ASSERTS_UAnalogSlider;

// Class CommonUI.CommonActionHandlerInterface
// 0x0000 (0x0000 - 0x0000)
class ICommonActionHandlerInterface final
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonActionHandlerInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonActionHandlerInterface")
	}
	static class ICommonActionHandlerInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICommonActionHandlerInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICommonActionHandlerInterface;

// Class CommonUI.CommonBorderStyle
// 0x0090 (0x00B8 - 0x0028)
class UCommonBorderStyle : public UObject
{
public:
	struct FSlateBrush                            Background;                                        // 0x0028(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

public:
	void GetBackgroundBrush(struct FSlateBrush* Brush) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonBorderStyle")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonBorderStyle")
	}
	static class UCommonBorderStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonBorderStyle>();
	}
};
DUMPER7_ASSERTS_UCommonBorderStyle;

// Class CommonUI.CommonBorder
// 0x0020 (0x02B0 - 0x0290)
class UCommonBorder : public UBorder
{
public:
	TSubclassOf<class UCommonBorderStyle>         Style;                                             // 0x0290(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReducePaddingBySafezone;                          // 0x0298(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                MinimumPadding;                                    // 0x029C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetStyle(TSubclassOf<class UCommonBorderStyle> InStyle);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonBorder")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonBorder")
	}
	static class UCommonBorder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonBorder>();
	}
};
DUMPER7_ASSERTS_UCommonBorder;

// Class CommonUI.CommonVisibilityWidget
// 0x0010 (0x02C0 - 0x02B0)
class UCommonVisibilityWidget final : public UCommonBorder
{
public:
	bool                                          bShowForGamepad;                                   // 0x02B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowForMouseAndKeyboard;                          // 0x02B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowForPC;                                        // 0x02B2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowForMac;                                       // 0x02B3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowForPS4;                                       // 0x02B4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowForXBox;                                      // 0x02B5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowForIOS;                                       // 0x02B6(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowForAndroid;                                   // 0x02B7(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              VisibleType;                                       // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              HiddenType;                                        // 0x02B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonVisibilityWidget")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonVisibilityWidget")
	}
	static class UCommonVisibilityWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonVisibilityWidget>();
	}
};
DUMPER7_ASSERTS_UCommonVisibilityWidget;

// Class CommonUI.CommonButtonStyle
// 0x0508 (0x0530 - 0x0028)
class UCommonButtonStyle : public UObject
{
public:
	bool                                          bSingleMaterial;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            SingleMaterialBrush;                               // 0x0030(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            NormalBase;                                        // 0x00C0(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            NormalHovered;                                     // 0x0150(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            NormalPressed;                                     // 0x01E0(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            SelectedBase;                                      // 0x0270(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            SelectedHovered;                                   // 0x0300(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            SelectedPressed;                                   // 0x0390(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Disabled;                                          // 0x0420(0x0090)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FMargin                                ButtonPadding;                                     // 0x04B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                CustomPadding;                                     // 0x04C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         MinWidth;                                          // 0x04D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinHeight;                                         // 0x04D4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonTextStyle>           NormalTextStyle;                                   // 0x04D8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonTextStyle>           NormalHoveredTextStyle;                            // 0x04E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonTextStyle>           SelectedTextStyle;                                 // 0x04E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonTextStyle>           SelectedHoveredTextStyle;                          // 0x04F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonTextStyle>           DisabledTextStyle;                                 // 0x04F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateSound                            PressedSlateSound;                                 // 0x0500(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateSound                            HoveredSlateSound;                                 // 0x0518(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

public:
	void GetButtonPadding(struct FMargin* OutButtonPadding) const;
	void GetCustomPadding(struct FMargin* OutCustomPadding) const;
	void GetDisabledBrush(struct FSlateBrush* Brush) const;
	class UCommonTextStyle* GetDisabledTextStyle() const;
	void GetMaterialBrush(struct FSlateBrush* Brush) const;
	void GetNormalBaseBrush(struct FSlateBrush* Brush) const;
	void GetNormalHoveredBrush(struct FSlateBrush* Brush) const;
	class UCommonTextStyle* GetNormalHoveredTextStyle() const;
	void GetNormalPressedBrush(struct FSlateBrush* Brush) const;
	class UCommonTextStyle* GetNormalTextStyle() const;
	void GetSelectedBaseBrush(struct FSlateBrush* Brush) const;
	void GetSelectedHoveredBrush(struct FSlateBrush* Brush) const;
	class UCommonTextStyle* GetSelectedHoveredTextStyle() const;
	void GetSelectedPressedBrush(struct FSlateBrush* Brush) const;
	class UCommonTextStyle* GetSelectedTextStyle() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonButtonStyle")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonButtonStyle")
	}
	static class UCommonButtonStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonButtonStyle>();
	}
};
DUMPER7_ASSERTS_UCommonButtonStyle;

// Class CommonUI.CommonButtonInternal
// 0x0088 (0x04F0 - 0x0468)
class UCommonButtonInternal final : public UButton
{
public:
	UMulticastDelegateProperty_                   OnDoubleClicked;                                   // 0x0468(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_478[0x48];                                     // 0x0478(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinWidth;                                          // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MinHeight;                                         // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bButtonEnabled;                                    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bInteractionEnabled;                               // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4CA[0x26];                                     // 0x04CA(0x0026)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonButtonInternal")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonButtonInternal")
	}
	static class UCommonButtonInternal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonButtonInternal>();
	}
};
DUMPER7_ASSERTS_UCommonButtonInternal;

// Class CommonUI.CommonCustomNavigation
// 0x0010 (0x02A0 - 0x0290)
class UCommonCustomNavigation final : public UBorder
{
public:
	TDelegate<void(EUINavigation NavigationType)> OnNavigationEvent;                                 // 0x0290(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonCustomNavigation")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonCustomNavigation")
	}
	static class UCommonCustomNavigation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonCustomNavigation>();
	}
};
DUMPER7_ASSERTS_UCommonCustomNavigation;

// Class CommonUI.CommonGlobalInputHandler
// 0x0048 (0x0070 - 0x0028)
class UCommonGlobalInputHandler final : public UObject
{
public:
	uint8                                         Pad_28[0x48];                                      // 0x0028(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonGlobalInputHandler")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonGlobalInputHandler")
	}
	static class UCommonGlobalInputHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonGlobalInputHandler>();
	}
};
DUMPER7_ASSERTS_UCommonGlobalInputHandler;

// Class CommonUI.CommonInputManager
// 0x0298 (0x02C0 - 0x0028)
class UCommonInputManager final : public UObject
{
public:
	uint8                                         Pad_28[0x238];                                     // 0x0028(0x0238)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICommonActionHandlerInterface> CurrentlyHeldActionInputHandler;           // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UCommonActivatablePanel*>        ActivatablePanelStack;                             // 0x0270(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UCommonGlobalInputHandler*              GlobalInputHandler;                                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_288[0x10];                                     // 0x0288(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FOperation>                     Operations;                                        // 0x0298(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2A8[0x18];                                     // 0x02A8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool GetAvailableInputActions(TArray<struct FCommonInputActionHandlerData>* AvailableInputActions);
	void PopActivatablePanel(class UCommonActivatablePanel* ActivatablePanel);
	void PushActivatablePanel(class UCommonActivatablePanel* ActivatablePanel, bool bIntroPanel, bool bOutroPanelBelow);
	void ResumeStartingOperationProcessing();
	void SetGlobalInputHandlerPriorityFilter(int32 InFilterPriority);
	bool StartListeningForExistingHeldAction(const struct FDataTableRowHandle& InputActionDataRow, const TDelegate<void()>& CompleteEvent, const TDelegate<void(float HeldPercent)>& ProgressEvent);
	bool StopListeningForExistingHeldAction(const struct FDataTableRowHandle& InputActionDataRow, const TDelegate<void()>& CompleteEvent, const TDelegate<void(float HeldPercent)>& ProgressEvent);
	void SuspendStartingOperationProcessing();

	int32 GetGlobalInputHandlerPriorityFilter() const;
	bool IsInputSuspended() const;
	bool IsPanelOnStack(const class UCommonActivatablePanel* InPanel) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonInputManager")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonInputManager")
	}
	static class UCommonInputManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonInputManager>();
	}
};
DUMPER7_ASSERTS_UCommonInputManager;

// Class CommonUI.CommonLoadGuard
// 0x0088 (0x01B8 - 0x0130)
class UCommonLoadGuard final : public UContentWidget
{
public:
	UMulticastDelegateProperty_                   OnLoadingStateChanged;                             // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          ThrobberAlignment;                                 // 0x0140(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ThrobberPadding;                                   // 0x0144(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LoadingText;                                       // 0x0158(0x0018)(Edit, NativeAccessSpecifierPrivate)
	struct FStringClassReference                  TextStyleClass;                                    // 0x0170(0x0010)(Config, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCommonTextStyle>           TextStyle;                                         // 0x0180(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_LoadingText;                                  // 0x0188(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_190[0x28];                                     // 0x0190(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_GuardAndLoadAsset(const TSoftObjectPtr<class UObject>& InLazyAsset, const TDelegate<void(class UObject* Object)>& OnAssetLoaded);
	void SetIsLoading(bool bInIsLoading);
	void SetLoadingText(const class FText& InLoadingText);

	bool IsLoading() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonLoadGuard")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonLoadGuard")
	}
	static class UCommonLoadGuard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonLoadGuard>();
	}
};
DUMPER7_ASSERTS_UCommonLoadGuard;

// Class CommonUI.CommonLazyImage
// 0x0040 (0x0240 - 0x0200)
class UCommonLazyImage final : public UImage
{
public:
	UMulticastDelegateProperty_                   OnLoadingStateChanged;                             // 0x0200(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_210[0x28];                                     // 0x0210(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonLoadGuard*                       LoadGuard;                                         // 0x0238(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ForwardLoadingStateChanged(bool bIsLoading);
	void SetBrushFromLazyDisplayAsset(const TSoftObjectPtr<class UObject>& LazyObject, bool bMatchTextureSize);
	void SetBrushFromLazyMaterial(const TSoftObjectPtr<class UMaterialInterface>& LazyMaterial);
	void SetBrushFromLazyTexture(const TSoftObjectPtr<class UTexture2D>& LazyTexture, bool bMatchSize);
	void ShowDefaultImage();

	bool IsLoading() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonLazyImage")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonLazyImage")
	}
	static class UCommonLazyImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonLazyImage>();
	}
};
DUMPER7_ASSERTS_UCommonLazyImage;

// Class CommonUI.CommonListViewNullItem
// 0x0000 (0x0028 - 0x0028)
class UCommonListViewNullItem final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonListViewNullItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonListViewNullItem")
	}
	static class UCommonListViewNullItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonListViewNullItem>();
	}
};
DUMPER7_ASSERTS_UCommonListViewNullItem;

// Class CommonUI.CommonTreeView
// 0x0028 (0x0340 - 0x0318)
class UCommonTreeView final : public UCommonListView
{
public:
	TDelegate<void(class UObject* Item)>          OnGetChildrenForCategory;                          // 0x0318(0x0010)(Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAllowInvisibleItemSelection;                      // 0x0328(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_329[0x17];                                     // 0x0329(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleItemClickedCommonButton(class UCommonButton* Button);
	void RequestRefresh();
	void SetItemExpansion(class UObject* Item, bool InShouldExpandItem);
	void SetSelection(class UObject* InItem);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonTreeView")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonTreeView")
	}
	static class UCommonTreeView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonTreeView>();
	}
};
DUMPER7_ASSERTS_UCommonTreeView;

// Class CommonUI.CommonPoolableWidgetInterface
// 0x0000 (0x0000 - 0x0000)
class ICommonPoolableWidgetInterface final
{
public:
	void OnAcquireFromPool();
	void OnReleaseToPool();

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonPoolableWidgetInterface")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonPoolableWidgetInterface")
	}
	static class ICommonPoolableWidgetInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICommonPoolableWidgetInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICommonPoolableWidgetInterface;

// Class CommonUI.CommonListItem
// 0x0000 (0x0000 - 0x0000)
class ICommonListItem final
{
public:
	void Private_OnExpanderArrowShiftClicked();
	void RegisterOnClicked(const TDelegate<void(class UUserWidget* Widget)>& Callback);
	void SetExpanded(bool bExpanded);
	void SetIndexInList(int32 InIndexInList);
	void SetSelected(bool bSelected);
	void ToggleExpansion();

	int32 DoesItemHaveChildren() const;
	int32 GetIndentLevel() const;
	bool IsItemExpanded() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonListItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonListItem")
	}
	static class ICommonListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICommonListItem>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICommonListItem;

// Class CommonUI.CommonObjectListItem
// 0x0000 (0x0000 - 0x0000)
class ICommonObjectListItem final
{
public:
	void Reset();
	void SetData(class UObject* InData, class UCommonListView* OwningList);

	class UObject* GetData() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonObjectListItem")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonObjectListItem")
	}
	static class ICommonObjectListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ICommonObjectListItem>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
DUMPER7_ASSERTS_ICommonObjectListItem;

// Class CommonUI.CommonTextStyle
// 0x00A8 (0x00D0 - 0x0028)
class UCommonTextStyle : public UObject
{
public:
	struct FSlateFontInfo                         Font;                                              // 0x0028(0x0068)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0090(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsesDropShadow;                                   // 0x00A0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ShadowOffset;                                      // 0x00A4(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ShadowColor;                                       // 0x00AC(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                Margin;                                            // 0x00BC(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                         LineHeightPercentage;                              // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void GetColor(struct FLinearColor* OutColor) const;
	void GetFont(struct FSlateFontInfo* OutFont) const;
	float GetLineHeightPercentage() const;
	void GetMargin(struct FMargin* OutMargin) const;
	void GetShadowColor(struct FLinearColor* OutColor) const;
	void GetShadowOffset(struct FVector2D* OutShadowOffset) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonTextStyle")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonTextStyle")
	}
	static class UCommonTextStyle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonTextStyle>();
	}
};
DUMPER7_ASSERTS_UCommonTextStyle;

// Class CommonUI.CommonDateTimeTextBlock
// 0x0020 (0x02B8 - 0x0298)
class UCommonDateTimeTextBlock final : public UCommonTextBlock
{
public:
	uint8                                         Pad_298[0x20];                                     // 0x0298(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetDateTimeValue(const struct FDateTime& InDateTime, bool bShowAsCountdown);
	void SetTimespanValue(const struct FTimespan& InTimespan);

	struct FDateTime GetDateTime() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonDateTimeTextBlock")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonDateTimeTextBlock")
	}
	static class UCommonDateTimeTextBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonDateTimeTextBlock>();
	}
};
DUMPER7_ASSERTS_UCommonDateTimeTextBlock;

// Class CommonUI.CommonUIContext
// 0x00B8 (0x00E0 - 0x0028)
class UCommonUIContext final : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                   OnInputMethodChanged;                              // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x78];                                      // 0x0038(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnInputSuspensionChanged;                          // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0[0x10];                                      // 0x00C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputManager*                    CommonInputManager;                                // 0x00D0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsUsingGamepad;                                   // 0x00D8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsUsingTouch;                                     // 0x00D9(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECommonInputType                              GamepadInputType;                                  // 0x00DA(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetGamepadInputType(ECommonInputType InGamepadInputType);

	ECommonInputType GetCurrentInputType() const;
	struct FSlateBrush GetInputActionButtonIcon(const struct FDataTableRowHandle& InputActionRowHandle, ECommonInputType InputType) const;
	class UCommonInputManager* GetInputManager() const;
	bool IsUsingGamepad() const;
	bool IsUsingPointerInput() const;
	bool IsUsingTouch() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonUIContext")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonUIContext")
	}
	static class UCommonUIContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonUIContext>();
	}
};
DUMPER7_ASSERTS_UCommonUIContext;

// Class CommonUI.CommonUILibrary
// 0x0000 (0x0028 - 0x0028)
class UCommonUILibrary final : public UBlueprintFunctionLibrary
{
public:
	static class UWidget* FindParentWidgetOfType(class UWidget* StartingWidget, TSubclassOf<class UWidget> Type);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonUILibrary")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonUILibrary")
	}
	static class UCommonUILibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonUILibrary>();
	}
};
DUMPER7_ASSERTS_UCommonUILibrary;

// Class CommonUI.CommonUISettings
// 0x0068 (0x0090 - 0x0028)
class UCommonUISettings final : public UObject
{
public:
	struct FStringClassReference                  DefaultTextStyle_StringRef;                        // 0x0028(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonTextStyle>           DefaultTextStyle;                                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStringClassReference                  DefaultButtonStyle_StringRef;                      // 0x0040(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonButtonStyle>         DefaultButtonStyle;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStringClassReference                  DefaultBorderStyle_StringRef;                      // 0x0058(0x0010)(Edit, Config, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonBorderStyle>         DefaultBorderStyle;                                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCommonInputKeyDisplayConfiguration> InputKeyToPlatformSpecificDisplayDataMap;     // 0x0070(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    DefaultClickAction;                                // 0x0080(0x0010)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonUISettings")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonUISettings")
	}
	static class UCommonUISettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonUISettings>();
	}
};
DUMPER7_ASSERTS_UCommonUISettings;

// Class CommonUI.CommonRotator
// 0x0090 (0x0930 - 0x08A0)
class UCommonRotator : public UCommonButton
{
public:
	uint8                                         Pad_8A0[0x40];                                     // 0x08A0(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnRotated;                                         // 0x08E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCommonBorder*                          MainBorder;                                        // 0x08F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButton*                          ButtonLeft;                                        // 0x08F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButton*                          ButtonRight;                                       // 0x0900(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                       MyText;                                            // 0x0908(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_910[0x20];                                     // 0x0910(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PopulateTextLabels(const TArray<class FText>& Labels);
	void SetSelectedItem(int32 InValue);
	void ShiftTextLeft(class UCommonButton* Button);
	void ShiftTextRight(class UCommonButton* Button);

	class FText GetSelectedText() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonRotator")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonRotator")
	}
	static class UCommonRotator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonRotator>();
	}
};
DUMPER7_ASSERTS_UCommonRotator;

// Class CommonUI.CommonInputReflector
// 0x0028 (0x0260 - 0x0238)
class UCommonInputReflector : public UCommonUserWidget
{
public:
	TSubclassOf<class UCommonButton>              ButtonType;                                        // 0x0238(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCommonButton*>                  ActiveButtons;                                     // 0x0240(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UCommonButton*>                  InactiveButtons;                                   // 0x0250(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	void ClearButtons();
	void OnButtonAdded(class UCommonButton* AddedButton, const struct FCommonInputActionHandlerData& Data);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonInputReflector")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonInputReflector")
	}
	static class UCommonInputReflector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonInputReflector>();
	}
};
DUMPER7_ASSERTS_UCommonInputReflector;

// Class CommonUI.CommonWidgetSwitcher
// 0x0050 (0x0198 - 0x0148)
class UCommonWidgetSwitcher : public UWidgetSwitcher
{
public:
	UMulticastDelegateProperty_                   OnActiveWidgetDeactivated;                         // 0x0148(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnActiveWidgetChanged;                             // 0x0158(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	ECommonSwitcherTransition                     TransitionType;                                    // 0x0168(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETransitionCurve                              TransitionCurveType;                               // 0x0169(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TransitionDuration;                                // 0x016C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_170[0x22];                                     // 0x0170(0x0022)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bWidgetActivationEnabled;                          // 0x0192(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOutroPanelBelow;                                  // 0x0193(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ActivateNextWidget(bool bCanWrap);
	void ActivatePreviousWidget(bool bCanWrap);
	void ActivateWidget();
	void DeactivateWidget();
	void HandleActiveWidgetDeactivated(class UCommonActivatablePanel* DeactivatedPanel);
	void SetActiveWidget_Advanced(class UWidget* Widget, const bool AttemptActivationChange);
	void SetActiveWidgetIndex_Advanced(const int32 Index_0, const bool AttemptActivationChange);

	bool HasWidgets() const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonWidgetSwitcher")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonWidgetSwitcher")
	}
	static class UCommonWidgetSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonWidgetSwitcher>();
	}
};
DUMPER7_ASSERTS_UCommonWidgetSwitcher;

// Class CommonUI.CommonWidgetCarousel
// 0x08E0 (0x0A10 - 0x0130)
class UCommonWidgetCarousel final : public UPanelWidget
{
public:
	int32                                         ActiveWidgetIndex;                                 // 0x0130(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnCurrentPageIndexChanged;                         // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FWidgetCarouselNavigationBarStyle      NavigationStyle;                                   // 0x0148(0x0890)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_9D8[0x38];                                     // 0x09D8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginAutoScrolling(float ScrollInterval);
	void EndAutoScrolling();
	void NextPage();
	void PreviousPage();
	void SetActiveWidget(class UWidget* Widget);
	void SetActiveWidgetIndex(int32 Index_0);

	int32 GetActiveWidgetIndex() const;
	class UWidget* GetWidgetAtIndex(int32 Index_0) const;

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonWidgetCarousel")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonWidgetCarousel")
	}
	static class UCommonWidgetCarousel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonWidgetCarousel>();
	}
};
DUMPER7_ASSERTS_UCommonWidgetCarousel;

// Class CommonUI.CommonWidgetStack
// 0x0000 (0x0198 - 0x0198)
class UCommonWidgetStack final : public UCommonWidgetSwitcher
{
public:
	void ActivateWidget();
	void DeactivateWidget();
	class UWidget* PopWigdet();
	void PushWidget(class UWidget* InWidget);

public:
	static class UClass* StaticClass()
	{
		STATIC_CLASS_IMPL("CommonWidgetStack")
	}
	static const class FName& StaticName()
	{
		STATIC_NAME_IMPL(L"CommonWidgetStack")
	}
	static class UCommonWidgetStack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommonWidgetStack>();
	}
};
DUMPER7_ASSERTS_UCommonWidgetStack;

}

